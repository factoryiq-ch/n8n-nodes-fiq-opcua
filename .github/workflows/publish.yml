name: Publish

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      actions: write
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Set up git user for CI
        run: |
          git config user.name "FactoryIQ CI"
          git config user.email "noreply@factoryiq.ch"
      - name: Use Node.js 18.17.0
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          registry-url: 'https://registry.npmjs.org/'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Test
        run: npm run test
      - name: Release (standard-version)
        run: |
          # Get the current version to create branch name
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          TIMESTAMP=$(date +%s)
          BRANCH_NAME="release/v${CURRENT_VERSION}-${TIMESTAMP}"

          # Create and switch to release branch with unique name
          git checkout -b "${BRANCH_NAME}"

          # Run standard-version to bump version and create changelog
          npm run release

          # Force push the release branch (in case it exists)
          git push origin "${BRANCH_NAME}" --force

          # Get the new version after bump
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Pull Request
        run: |
          # Create PR from release branch to main
          gh pr create \
            --title "chore(release): ${NEW_VERSION}" \
            --body "Automated release PR for version ${NEW_VERSION}" \
            --base main \
            --head "${BRANCH_NAME}"

          # Wait a moment for PR to be created
          sleep 5

          # Merge the PR immediately (manual merge, not auto-merge)
          gh pr merge "${BRANCH_NAME}" --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - name: Wait for PR merge and create release
        run: |
          # Wait a bit for PR to be processed
          sleep 10

          # Switch back to main and pull latest
          git checkout main
          git pull origin main

          # Create and push tag
          git tag "v${NEW_VERSION}"
          git push origin "v${NEW_VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub Release
        run: |
          # Create GitHub release from the tag
          gh release create "v${NEW_VERSION}" \
            --title "v${NEW_VERSION}" \
            --notes-file CHANGELOG.md \
            --latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
